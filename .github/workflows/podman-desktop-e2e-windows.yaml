name: PD E2E Install & Run
run-name: Podman Desktop E2E with Podman installation ${{ inputs.podman_provider != '' && inputs.podman_provider || 'WSL' }} ${{ inputs.debug == 'true' && '- Debug' || '' }}

on:
  schedule:
    - cron:  '0 3 * * *'
  workflow_dispatch:
    inputs:
      repo_branch:
        default: 'FORK=podman-desktop,BRANCH=main'
        description: 'Podman Desktop fork and branch'
        type: string
        required: true
      npm_target:
        default: 'test:e2e'
        description: 'npm target to run tests'
        type: string
        required: true
      env_vars:
        default: 'TEST_PODMAN_MACHINE=true'
        description: 'Env. Variables passed into target machine, ie: VAR1=xxx,VAR2=true,VAR3=15,VAR4="Pass me along",RUN_KIND_TESTS=true'
        type: 'string'
        required: true
      debug:
        description: 'For debugging to restrict what is run'
        type: choice
        options:
          - 'false'
          - 'true'
      images_version:
        default: 'BUILDER="v0.0.3",PODMAN="v0.0.3",RUNNER="v0.0.3"'
        description: 'Testing images versions, no spaces'
        type: 'string'
        required: true
      podman_provider:
        type: choice
        description: 'Podman virtualization provider, default is wsl, alternative hyperv'
        options:
        - wsl
        - hyperv
        required: true
      mapt_params:
        default: 'IMAGE=quay.io/redhat-developer/mapt;VERSION_TAG=v0.9.7;CPUS=4;MEMORY=32;EXCLUDED_REGIONS="westindia,centralindia,southindia,australiacentral,australiacentral2,australiaeast,australiasoutheast,southafricanorth,southafricawest"'
        description: 'MAPT image, version tag, cpus and memory request, and excluded regions in format IMAGE=xxx;VERSION_TAG=xxx;CPUS=xxx;MEMORY=xxx;EXCLUDED_REGIONS=xxx'
        required: true
        type: string

jobs:
  windows:
    timeout-minutes: 180
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
    strategy:
      fail-fast: false
      matrix:
        windows-version: ['10','11']
        windows-featurepack: ['22h2-ent', '23h2-ent']
        exclude:
        - windows-version: '10'
          windows-featurepack: '23h2-ent'
        - windows-version: '11'
          windows-featurepack: '22h2-ent'
        - windows-version: ${{ (github.event.inputs.debug && github.event.inputs.debug == 'true') && '11' || 'N/A' }}
          windows-featurepack: ${{ (github.event.inputs.debug && github.event.inputs.debug == 'true') && '23h2-ent' || 'N/A' }}

    steps:
    - name: Set the default env. variables
      env:
        DEFAULT_REPO_BRANCH: 'FORK=podman-desktop,BRANCH=main'
        DEFAULT_NPM_TARGET: 'test:e2e'
        DEFAULT_PODMAN_PROVIDER: 'wsl'
        DEFAULT_ENV_VARS: 'TEST_PODMAN_MACHINE=true'
        DEFAULT_PODMAN_OPTIONS: 'INIT=1,START=1,ROOTFUL=1,NETWORKING=0'
        DEFAULT_IMAGES_VERSIONS: 'BUILDER="v0.0.3",PODMAN="v0.0.3",RUNNER="v0.0.3"'
        DEFAULT_MAPT_PARAMS: "IMAGE=${{ vars.MAPT_IMAGE || 'quay.io/redhat-developer/mapt' }};VERSION_TAG=${{ vars.MAPT_VERSION_TAG || 'v0.9.7' }};CPUS=${{ vars.MAPT_CPUS || '4' }};MEMORY=${{ vars.MAPT_MEMORY || '32' }};EXCLUDED_REGIONS=\"${{ vars.MAPT_EXCLUDED_REGIONS || 'westindia,centralindia,southindia,australiacentral,australiacentral2,australiaeast,australiasoutheast,southafricanorth,southafricawest' }}\""
      run: |
        # Parse fork and branch from repo_branch parameter
        REPO_BRANCH_INPUT="${{ github.event.inputs.repo_branch || env.DEFAULT_REPO_BRANCH }}"
        echo "$REPO_BRANCH_INPUT" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print kv[1]"="kv[2]}}' >> $GITHUB_ENV
        echo "PODMAN_PROVIDER=${{ github.event.inputs.podman_provider || env.DEFAULT_PODMAN_PROVIDER }}" >> $GITHUB_ENV
        echo "NPM_TARGET=${{ github.event.inputs.npm_target || env.DEFAULT_NPM_TARGET }}" >> $GITHUB_ENV
        echo "ENV_VARS=${{ github.event.inputs.env_vars || env.DEFAULT_ENV_VARS }}" >> $GITHUB_ENV
        echo "${{ env.DEFAULT_PODMAN_OPTIONS }}" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "PODMAN_"kv[1]"="kv[2]}}' >> $GITHUB_ENV
        echo "${{ github.event.inputs.images_version || env.DEFAULT_IMAGES_VERSIONS }}" | awk -F ',' \
        '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "PDE2E_"kv[1]"="kv[2]}}' >> $GITHUB_ENV
        echo "${{ github.event.inputs.mapt_params || env.DEFAULT_MAPT_PARAMS }}" | awk -F ';' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "MAPT_"kv[1]"="kv[2]}}' >> $GITHUB_ENV

    - name: Create instance
      uses: podman-desktop/e2e/.github/actions/create-instance@main
      with:
        mapt-image: ${{ env.MAPT_IMAGE || '' }}
        mapt-version: ${{ env.MAPT_VERSION_TAG || '' }}
        windows-version: ${{ matrix.windows-version }}
        windows-featurepack: ${{ matrix.windows-featurepack }}
        cpus: ${{ env.MAPT_CPUS || '' }}
        memory: ${{ env.MAPT_MEMORY || '' }}
        excluded-regions: ${{ env.MAPT_EXCLUDED_REGIONS || '' }}
        arm-tenant-id: ${{ secrets.ARM_TENANT_ID }}
        arm-subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        arm-client-id: ${{ secrets.ARM_CLIENT_ID }}
        arm-client-secret: ${{ secrets.ARM_CLIENT_SECRET }}

    - name: Check instance system info
      uses: podman-desktop/e2e/.github/actions/instance-system-info@main

    - name: Emulate X session
      uses: podman-desktop/e2e/.github/actions/emulate-x-session@main

    - name: Build Podman Desktop locally
      uses: podman-desktop/e2e/.github/actions/build-podman-desktop@main
      with:
        fork: ${{ env.FORK }}
        branch: ${{ env.BRANCH }}
        
    - name: Install Podman via Podman Desktop using GOAX
      run: |
        cat results/pde2e-binary-path.log | awk '{print $1}'
        # Run e2e tests
        podman run --rm -d --name pd-e2e-windows \
          -e TARGET_HOST=$(cat host) \
          -e TARGET_HOST_USERNAME=$(cat username) \
          -e TARGET_HOST_KEY_PATH=/data/id_rsa \
          -e TARGET_FOLDER=pd-e2e \
          -e TARGET_RESULTS=pd-e2e-results \
          -e TARGET_CLEANUP=false \
          -e OUTPUT_FOLDER=/data \
          -e DEBUG=true \
          -v $PWD:/data:z \
          quay.io/rhqp/podman-desktop-e2e:v1.1.0-windows-amd64  \
              pd-e2e/run.ps1 \
                  -targetFolder pd-e2e \
                  -wslInstallFix 'true' \
                  -junitResultsFilename pd-e2e-results.xml \
                  -pdPath "$(cat results/pde2e-binary-path.log | tr '\n' " ")" \
                  -resultsFolder pd-e2e-results
        # Check logs 
        podman logs -f pd-e2e-windows

    - name: Run Podman Desktop Playwright E2E tests
      if: ${{ !github.event.inputs.debug || github.event.inputs.debug == 'false' }}
      uses: podman-desktop/e2e/.github/actions/run-playwright-test@update-workflow
      with:
        pde2e-runner-tag: ${{ env.PDE2E_RUNNER }}
        podman-path: false
        fork-repo: ${{ env.FORK }}
        branch-name: ${{ env.BRANCH }}
        npm-target: ${{ env.NPM_TARGET }}
        podman-init: ${{ env.PODMAN_INIT }}
        rootful: ${{ env.PODMAN_ROOTFUL }}
        podman-start: ${{ env.PODMAN_START }}
        user-networking: ${{ env.PODMAN_NETWORKING }}
        podman-provider: ${{ env.PODMAN_PROVIDER }}
        env-vars: ${{ env.ENV_VARS }}
        ci-bot-token: ${{ secrets.PODMANDESKTOP_CI_BOT_TOKEN }}

    - name: Destroy instance
      if: always()
      uses: podman-desktop/e2e/.github/actions/destroy-instance@main
      with:
        mapt-image: ${{ env.MAPT_IMAGE || '' }}
        mapt-version: ${{ env.MAPT_VERSION_TAG || '' }}
        arm-tenant-id: ${{ secrets.ARM_TENANT_ID }}
        arm-subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        arm-client-id: ${{ secrets.ARM_CLIENT_ID }}
        arm-client-secret: ${{ secrets.ARM_CLIENT_SECRET }}

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v5
      if: always() # always run even if the previous step fails
      with:
        fail_on_failure: true
        include_passed: true
        detailed_summary: true
        require_tests:  true
        report_paths: '**/*results.xml'

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: results-e2e-${{ matrix.windows-version }}${{ matrix.windows-featurepack }}
        path: |
          results/*
          pd-e2e-results/*
