name: PD E2E with Podman set
run-name: Desktop E2E Tests with Podman ${{ inputs.podman_provider || 'wsl' }}

on:
  workflow_dispatch:
    inputs:
      repo_branch:
        default: 'FORK=podman-desktop,BRANCH=main'
        description: 'Podman Desktop fork and branch'
        type: string
        required: true
      npm_target:
        default: 'test:e2e'
        description: 'npm target to run tests'
        type: string
        required: true
      podman_remote_url:
        default: 'https://github.com/containers/podman/releases/download/v5.2.5/podman-5.2.5-setup.exe'
        description: 'podman latest version exe'
        type: string
        required: true
      podman_machine_options:
        default: 'INIT=1,START=1'
        description: 'Podman Machine options (INIT=1,START=1)'
        type: string
        required: true
      podman_provider:
        default: 'wsl'
        description: 'Podman virtualization provider'
        type: choice
        required: true
        options:
        - wsl
        - hyperv
      env_vars:
        default: 'TEST_PODMAN_MACHINE=true'
        description: 'Env. Variables passed into target machine, ie: VAR1=xxx,VAR2=true,VAR3=15,VAR4="Pass me along",RUN_KIND_TESTS=true'
        type: 'string'
        required: true
      images_version:
        default: 'BUILDER="v0.0.3",PODMAN="v0.0.3",RUNNER="v0.0.3"'
        description: 'Testing images versions, no spaces'
        type: 'string'
        required: true
      mapt_params:
        default: 'IMAGE=quay.io/redhat-developer/mapt,VERSION_TAG=v0.9.7,CPUS=4,MEMORY=32,EXCLUDED_REGIONS="westindia,centralindia,southindia,australiacentral,australiacentral2,australiaeast,australiasoutheast,southafricanorth,southafricawest"'
        description: 'MAPT image, version tag, cpus and memory request, and excluded regions in format IMAGE=xxx,VERSION_TAG=xxx,CPUS=xxx,MEMORY=xxx,EXCLUDED_REGIONS=xxx'
        required: true
        type: string

jobs:
  windows:
    name: ${{ matrix.windows-version }} - ${{ matrix.rootful == '0' && 'rootless' || 'rootful' }} ${{ matrix.user-networking == '1' && '- user mode networking enabled' || '' }}
    timeout-minutes: 180
    runs-on: ubuntu-latest
    env:
      MAPT_VERSION: ${{ vars.MAPT_VERSION_TAG }}
      MAPT_IMAGE: quay.io/redhat-developer/mapt
    strategy:
      fail-fast: false
      matrix:
        windows-version: ['10','11']
        windows-featurepack: ['22h2-ent', '23h2-ent']
        rootful: [0, 1]
        user-networking: [0, 1]
        exclude:
        - windows-version: '10'
          windows-featurepack: '23h2-ent'
        - windows-version: '11'
          windows-featurepack: '22h2-ent'
        - rootful: 0
          user-networking: 1
        - rootful: 1
          user-networking: 1


    steps:
    - name: Set the default env. variables
      env:
        DEFAULT_REPO_BRANCH: 'FORK=podman-desktop,BRANCH=main'
        DEFAULT_NPM_TARGET: 'test:e2e'
        DEFAULT_PODMAN_REMOTE_URL: 'https://github.com/containers/podman/releases/download/v5.2.5/podman-5.2.5-setup.exe'
        DEFAULT_PODMAN_MACHINE_OPTIONS: 'INIT=1,START=1'
        DEFAULT_PODMAN_PROVIDER: 'wsl'
        DEFAULT_IMAGES_VERSIONS: 'BUILDER="v0.0.3",PODMAN="v0.0.3",RUNNER="v0.0.3"'
        DEFAULT_MAPT_PARAMS: "IMAGE=${{ vars.MAPT_IMAGE || 'quay.io/redhat-developer/mapt' }},VERSION_TAG=${{ vars.MAPT_VERSION_TAG || 'v0.9.7' }},CPUS=${{ vars.MAPT_CPUS || '4' }},MEMORY=${{ vars.MAPT_MEMORY || '32' }},EXCLUDED_REGIONS=\"${{ vars.MAPT_EXCLUDED_REGIONS || 'westindia,centralindia,southindia,australiacentral,australiacentral2,australiaeast,australiasoutheast,southafricanorth,southafricawest' }}\""
      run: |
        echo "${{ github.event.inputs.repo_branch || env.DEFAULT_REPO_BRANCH }}" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print kv[1]"="kv[2]}}' >> $GITHUB_ENV
        # Set podman configuration variables directly from separate inputs
        echo "PODMAN_REMOTE_URL=${{ github.event.inputs.podman_remote_url || env.DEFAULT_PODMAN_REMOTE_URL }}" >> $GITHUB_ENV
        echo "${{ github.event.inputs.podman_machine_options || env.DEFAULT_PODMAN_MACHINE_OPTIONS }}" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "PODMAN_"kv[1]"="kv[2]}}' >> $GITHUB_ENV
        echo "PODMAN_PROVIDER=${{ github.event.inputs.podman_provider || env.DEFAULT_PODMAN_PROVIDER }}" >> $GITHUB_ENV
        echo "NPM_TARGET=${{ github.event.inputs.npm_target || env.DEFAULT_NPM_TARGET }}" >> $GITHUB_ENV
        echo "${{ github.event.inputs.images_version || env.DEFAULT_IMAGES_VERSIONS }}" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "PDE2E_"kv[1]"="kv[2]}}' >> $GITHUB_ENV
        echo "${{ github.event.inputs.mapt_params }}" | awk -F ',' \
         '{for (i=1; i<=NF; i++) {split($i, kv, "="); print "MAPT_"kv[1]"="kv[2]}}' >> $GITHUB_ENV
        

    - name: Create instance
      uses: podman-desktop/e2e/.github/actions/create-instance@11154f001a8679292b7711d4d7a72dc99b07731d
      with:
        mapt-image: ${{ env.MAPT_IMAGE || '' }}
        mapt-version: ${{ env.MAPT_VERSION_TAG || '' }}
        windows-version: ${{ matrix.windows-version }}
        windows-featurepack: ${{ matrix.windows-featurepack }}
        cpus: ${{ env.MAPT_CPUS || '' }}
        memory: ${{ env.MAPT_MEMORY || '' }}
        excluded-regions: ${{ env.MAPT_EXCLUDED_REGIONS || '' }}
        arm-tenant-id: ${{ secrets.ARM_TENANT_ID }}
        arm-subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        arm-client-id: ${{ secrets.ARM_CLIENT_ID }}
        arm-client-secret: ${{ secrets.ARM_CLIENT_SECRET }}

    - name: Check instance system info
      run: |
        ssh -i id_rsa \
          -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile=/dev/null \
          -o ServerAliveInterval=30 \
          -o ServerAliveCountMax=1200 \
          $(cat username)@$(cat host) "systeminfo"

    - name: Emulate X session 
      run: |
        # use fake rdp to emulate an active x session
        podman run -d --name x-session \
          -e RDP_HOST=$(cat host) \
          -e RDP_USER=$(cat username) \
          -e RDP_PASSWORD=$(cat userpassword) \
          quay.io/rhqp/frdp:v0.0.1
        # Wait until the x session has been created
        podman wait --condition running x-session
        # Check logs for the x session
        podman logs x-session

    - name: Setup dependencies and build Podman Desktop locally
      run: |
        podman run -d --name pde2e-builder-run \
          -e TARGET_HOST=$(cat host) \
          -e TARGET_HOST_USERNAME=$(cat username) \
          -e TARGET_HOST_KEY_PATH=/data/id_rsa \
          -e TARGET_FOLDER=pd-e2e \
          -e TARGET_RESULTS=results \
          -e TARGET_CLEANUP=false \
          -e OUTPUT_FOLDER=/data \
          -e DEBUG=true \
          -v $PWD:/data:z \
          quay.io/odockal/pde2e-builder:${{ env.PDE2E_BUILDER }}-windows  \
              pd-e2e/builder.ps1 \
                -targetFolder pd-e2e \
                -resultsFolder results \
                -fork ${{ env.FORK }} \
                -branch ${{ env.BRANCH }}
        # check logs
        podman logs -f pde2e-builder-run

    - name: Download Podman nightly, do not initialize and start
      run: |
        podman run --rm -d --name pde2e-podman-run \
          -e TARGET_HOST=$(cat host) \
          -e TARGET_HOST_USERNAME=$(cat username) \
          -e TARGET_HOST_KEY_PATH=/data/id_rsa \
          -e TARGET_FOLDER=pd-e2e \
          -e TARGET_CLEANUP=false \
          -e TARGET_RESULTS=results \
          -e OUTPUT_FOLDER=/data \
          -e DEBUG=true \
          -v $PWD:/data:z \
          quay.io/odockal/pde2e-podman:${{ env.PDE2E_PODMAN }}-windows  \
            pd-e2e/podman.ps1 \
              -downloadUrl "${{ env.PODMAN_REMOTE_URL }}" \
              -targetFolder pd-e2e \
              -resultsFolder results \
              -initialize 0 \
              -rootful 0 \
              -start 0 \
              -installWSL 0
        # check logs
        podman logs -f pde2e-podman-run

    - name: Run Podman Desktop Playwright E2E tests
      env:
        PODMANDESKTOP_CI_BOT_TOKEN: ${{ secrets.PODMANDESKTOP_CI_BOT_TOKEN }}
      run: |
        echo "PODMANDESKTOP_CI_BOT_TOKEN=${PODMANDESKTOP_CI_BOT_TOKEN}" > secrets.txt
        podman run -d --name pde2e-runner-run \
          -e TARGET_HOST=$(cat host) \
          -e TARGET_HOST_USERNAME=$(cat username) \
          -e TARGET_HOST_KEY_PATH=/data/id_rsa \
          -e TARGET_FOLDER=pd-e2e \
          -e TARGET_RESULTS=results \
          -e OUTPUT_FOLDER=/data \
          -e DEBUG=true \
          -v $PWD:/data:z \
          -v $PWD/secrets.txt:/opt/pde2e-runner/secrets.txt:z \
          quay.io/odockal/pde2e-runner:${{ env.PDE2E_RUNNER }}-windows  \
              pd-e2e/runner.ps1 \
                -targetFolder pd-e2e \
                -resultsFolder results \
                -podmanPath $(cat results/podman-location.log) \
                -fork ${{ env.FORK }} \
                -branch ${{ env.BRANCH }} \
                -npmTarget ${{ env.NPM_TARGET }} \
                -initialize ${{ env.PODMAN_INIT }} \
                -start ${{ env.PODMAN_START }} \
                -rootful ${{ matrix.rootful }} \
                -userNetworking ${{ matrix.user-networking }} \
                -podmanProvider ${{ env.PODMAN_PROVIDER }} \
                -envVars ${{ github.event.inputs.env_vars }} \
                -secretFile secrets.txt
        # check logs
        podman logs -f pde2e-runner-run

    - name: Destroy instance
      if: always()
      uses: podman-desktop/e2e/.github/actions/destroy-instance@11154f001a8679292b7711d4d7a72dc99b07731d
      with:
        mapt-image: ${{ env.MAPT_IMAGE || '' }}
        mapt-version: ${{ env.MAPT_VERSION_TAG || '' }}
        arm-tenant-id: ${{ secrets.ARM_TENANT_ID }}
        arm-subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        arm-client-id: ${{ secrets.ARM_CLIENT_ID }}
        arm-client-secret: ${{ secrets.ARM_CLIENT_SECRET }}

    - name: Publish Test Report
      uses: mikepenz/action-junit-report@v5
      if: always() # always run even if the previous step fails
      with:
        annotate_only: true
        fail_on_failure: true
        include_passed: true
        detailed_summary: true
        require_tests:  true
        report_paths: '**/*results.xml'

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: results-e2e-${{ matrix.windows-version }}${{ matrix.windows-featurepack }}-${{ matrix.rootful == '0' && 'rootless' || 'rootful' }}${{ matrix.user-networking == '1' && '-userNetworking' || '' }}
        path: |
          results/*
