# Copyright (C) 2025 Red Hat, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: 'Build Podman Desktop'
description: 'Setup dependencies and build Podman Desktop locally'
inputs:
  builder-image:
    description: 'The base name for the pde2e-builder container image.'
    required: false
    default: 'quay.io/odockal/pde2e-builder'
    type: string
    example: 'quay.io/odockal/pde2e-builder'
  builder-tag:
    description: 'The version tag for the pde2e-builder container image.'
    required: false
    default: 'v0.0.3'
    type: string
    example: 'v0.0.3'
  fork:
    description: 'The repository fork to clone for the build.'
    required: true
    default: 'podman-desktop'
    type: string
    example: 'podman-desktop'
  branch:
    description: 'The repository branch to check out for the build.'
    required: true
    default: 'main'
    type: string
    example: 'main'
  target-folder:
    description: 'The target folder on the remote host where the build will occur.'
    required: false
    default: 'pd-e2e'
    type: string
    example: 'pd-e2e'
  results-folder:
    description: 'The folder for storing build results on the remote host.'
    required: false
    default: 'results'
    type: string
    example: 'results'
  target-cleanup:
    description: 'Whether to clean up the target folder after the build.'
    required: false
    default: false
    type: boolean
  debug-mode:
    description: 'Enable debug mode for more verbose logging in the container.'
    required: false
    default: true
    type: boolean
  env-vars:
    description: 'Environment variables to set in the build container.'
    required: false
    default: ''
    type: string
    example: 'KEY1=value1,KEY2=value2'

runs:
  using: 'composite'
  steps:
    - name: 'Build Podman Desktop from source'
      shell: bash
      run: |
        # Check if required connection files exist before proceeding
        if [ ! -f "host" ] || [ ! -f "username" ] || [ ! -f "id_rsa" ]; then
          echo "::error::Connection files (host, username, id_rsa) not found in the workspace."
          exit 1
        fi

        # Conditionally prepare the -envVars parameter
        ENV_VARS_PARAM=""
        if [[ -n "${{ inputs.env-vars }}" ]]; then
          # Note the extra quotes to handle potential spaces in the values
          ENV_VARS_PARAM="-envVars \"${{ inputs.env-vars }}\""
        fi

        echo "Starting Podman Desktop build process on $(cat host)..."

        podman run -d --name pde2e-builder-run \
          -e TARGET_HOST=$(cat host) \
          -e TARGET_HOST_USERNAME=$(cat username) \
          -e TARGET_HOST_KEY_PATH=/data/id_rsa \
          -e TARGET_FOLDER=${{ inputs.target-folder }} \
          -e TARGET_CLEANUP=${{ inputs.target-cleanup }} \
          -e TARGET_RESULTS=${{ inputs.results-folder }} \
          -e OUTPUT_FOLDER=/data \
          -e DEBUG=${{ inputs.debug-mode }} \
          -v $PWD:/data:z \
          ${{ inputs.builder-image }}:${{ inputs.builder-tag }}-windows  \
              pd-e2e/builder.ps1 \
                -targetFolder ${{ inputs.target-folder }} \
                -resultsFolder ${{ inputs.results-folder }} \
                -fork ${{ inputs.fork }} \
                -branch ${{ inputs.branch }} \
                ${ENV_VARS_PARAM}
                
        echo "Build container started. Tailing logs..."
        
        podman logs -f pde2e-builder-run